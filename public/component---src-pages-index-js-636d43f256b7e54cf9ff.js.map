{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["BlogIndex","location","data","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","postCounter","keywords","description","className","map","node","key","fields","slug","count","postClass","props","query","render"],"mappings":"oHAAA,gFAWMA,GAXN,oBAWkB,SAAC,EAAUC,GAAc,IAAtBC,EAAqB,EAArBA,KACbC,EAAYD,EAAKE,KAAKC,aAAaC,MACnCC,EAAQL,EAAKM,kBAAkBC,MACjCC,EAAc,EAElB,OACE,kBAAC,IAAD,CAAQJ,MAAOH,GACb,kBAAC,IAAD,CACEG,MAAM,OACNK,SAAU,CAAC,SAAD,wCAGXT,EAAKE,KAAKC,aAAaO,aACtB,4BAAQC,UAAU,aAChB,wBAAIA,UAAU,mBACXX,EAAKE,KAAKC,aAAaO,cAI9B,yBAAKC,UAAU,aACZN,EAAMO,KAAI,YAAe,IAAZC,EAAW,EAAXA,KAEZ,OADAL,IAEE,kBAAC,IAAD,CACEM,IAAKD,EAAKE,OAAOC,KACjBC,MAAOT,EACPK,KAAMA,EACNK,UAAS,gBA2CR,mBAAAC,GAAK,OAClB,kBAAC,cAAD,CACEC,MApCY,aAqCZC,OAAQ,SAAArB,GAAI,OACV,kBAACF,EAAD,eAAWC,SAAUoB,EAAMpB,SAAUoB,OAAK,EAACnB,KAAMA,GAAUmB","file":"component---src-pages-index-js-636d43f256b7e54cf9ff.js","sourcesContent":["import React from \"react\"\nimport { graphql, StaticQuery } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n// import Bio from \"../components/bio\"\nimport PostCard from \"../components/postCard\"\n\nimport \"../style/normalize.css\"\nimport \"../style/all.scss\"\n//TODO: switch to staticQuery, get rid of comments, remove unnecessary components, export as draft template\nconst BlogIndex = ({ data }, location) => {\n  const siteTitle = data.site.siteMetadata.title\n  const posts = data.allMarkdownRemark.edges\n  let postCounter = 0\n\n  return (\n    <Layout title={siteTitle}>\n      <SEO\n        title=\"Blog\"\n        keywords={[`devlog`, `blog`, `gatsby`, `javascript`, `react`]}\n      />\n      {/* <Bio /> */}\n      {data.site.siteMetadata.description && (\n        <header className=\"page-head\">\n          <h2 className=\"page-head-title\">\n            {data.site.siteMetadata.description}\n          </h2>\n        </header>\n      )}\n      <div className=\"post-feed\">\n        {posts.map(({ node }) => {\n          postCounter++\n          return (\n            <PostCard\n              key={node.fields.slug}\n              count={postCounter}\n              node={node}\n              postClass={`post`}\n            />\n          )\n        })}\n      </div>\n    </Layout>\n  )\n}\n\nconst indexQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM D, YYYY\")\n            title\n            description\n            tags\n            thumbnail {\n              childImageSharp {\n                fluid(maxWidth: 1360) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default props => (\n  <StaticQuery\n    query={indexQuery}\n    render={data => (\n      <BlogIndex location={props.location} props data={data} {...props} />\n    )}\n  />\n)\n"],"sourceRoot":""}